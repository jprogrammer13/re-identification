dataset
 - 0
    |_ 0.jpg
    |_ 1.jpg
       ...
    |_ n0.jpg
  - 1 
    |_ 0.jpg
    |_ 1.jpg
       ...
    |_ n1.jpg
   ...
  - m 
    |_ 0.jpg
    |_ 1.jpg
       ...
    |_ nm.jpg

# balanced random(1) if > 0.5 take different track_id, same otherwise
# we have to count n of img per clas

filtro per indici di train e di test
Dataset
data = read_csv(data.csv)

def len:
   data.size()

def get_item(index):
   30
   
   img1 = data.iloc[30] #1, img1.jpg
   same = 0

   if rando() > 0.5 :
      # prendo un'altra immagine dalla classe 1
      randoom da classe 1
      img2 = classe 1 a random
      same = 1

   else:
      random dalle classi
      img2 = classe 3 a random
      same = 0

   return img1, torch.mode.densenet(img2), same
      
